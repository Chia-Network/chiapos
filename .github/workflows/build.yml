name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-18.04, windows-latest]

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        # we need fetch-depth 0 so setuptools_scm can resolve tags

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install cibuildwheel==1.3.0

    - name: Lint source with flake8
      run: |
        pip install flake8
        flake8 tests setup.py

    - name: Lint source with mypy
      run: |
        pip install mypy
        mypy --config-file mypi.ini setup.py tests

    - name: Build source distribution with MacOS
      if: startsWith(matrix.os, 'mac')
      run: |
        pip install pep517
        python -m pep517.build --source --out-dir dist .

    - name: Build wheel and test
      run: |
        python -m cibuildwheel --output-dir dist
      env:
        # build python 3.7 and 3.8
        CIBW_BUILD: cp37-* cp38-*
        # don't build i686 targets, can't seem to find cmake for these
        CIBW_SKIP: '*-manylinux_i686 *-win32'
        # we need boost
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
        CIBW_BEFORE_BUILD_LINUX: >
          curl -L https://github.com/Kitware/CMake/releases/download/v3.17.0/cmake-3.17.0-Linux-`uname -m`.sh > cmake.sh
          && yes | sh cmake.sh | cat
          && rm -f /usr/bin/cmake
          && yum -y install boost-devel gmp-devel
          && python -m pip install --upgrade pip
          && which cmake
          && cmake --version
        CIBW_ENVIRONMENT_LINUX: "PATH=/project/cmake-3.17.0-Linux-`uname -m`/bin:$PATH"
        CIBW_BEFORE_BUILD_MACOS: >
          brew install boost
          && python -m pip install --upgrade pip
        CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.14
        CIBW_BUILD_VERBOSITY_MACOS: 0
        CIBW_BEFORE_BUILD_WINDOWS: python -m pip install --upgrade pip
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: py.test -v {project}/tests -s

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./dist

    - name: Install twine
      run: pip install twine

    - name: Publish distribution to Test PyPI
      env:
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        TWINE_USERNAME: __token__
        TWINE_NON_INTERACTIVE: 1
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      run: twine upload --non-interactive --skip-existing --verbose 'dist/*'

    - name: Publish distribution to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_NON_INTERACTIVE: 1
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: twine upload --non-interactive --skip-existing --verbose 'dist/*'

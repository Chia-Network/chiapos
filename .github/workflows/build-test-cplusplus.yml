name: Build and Test C++

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}--${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/long_lived/')) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  valgrind:
    if: false
    name: valgrind ubuntu
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: cmake, RunTests, and valgrind on ubuntu-20.04
        run: |
          sudo apt update
          sudo apt-get install valgrind -y
          mkdir build
          cd build
          cmake ../
          cmake --build . -- -j 6
          ctest -j 6 --output-on-failure
          valgrind --leak-check=full --show-leak-kinds=all --errors-for-leak-kinds=all ctest -j 6 --output-on-failure

  asan:
    name: Ubuntu ${{ matrix.os.name }} ${{ matrix.mode.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        mode:
          - name: ASAN
            matrix: asan
            cmake: ASAN
          - name: TSAN
            matrix: tsan
            cmake: TSAN
        os:
          - name: 20.04
            runs-on: ubuntu-20.04
          - name: 22.04
            runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: list packages before
        if: always()
        run: |
          apt list --installed

      - name: ASAN prep
        if: matrix.mode.matrix == 'asan'
        run: |
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          swapon -s

      - name: build
        env:
          TSAN_OPTIONS: memory_limit_mb=6000
        run: |
          mkdir build-san
          cd build-san
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.mode.cmake }} ../
          cmake --build . -- -j 6

      - name: test
        env:
          TSAN_OPTIONS: memory_limit_mb=6000
        run: |
          cd build-san
          ./RunTests

      - name: list packages after
        if: always()
        run: |
          apt list --installed

  windows:
    if: false
    name: Windows Latest
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: cmake, RunTests with Windows
      run: |
        mkdir build-win
        cd build-win
        cmake ..
        cmake --build . --config Release -j 6
        ctest -C Release -j 6
